<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cn.stylefeng</groupId>
        <artifactId>guns-distribution</artifactId>
        <version>1.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>guns-distribution-starter</artifactId>

    <packaging>jar</packaging>

    <dependencies>

        <!-- 分销模块 -->
        <dependency>
            <groupId>cn.stylefeng</groupId>
            <artifactId>distribution-primary</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- guns基础框架 -->
        <dependency>
            <groupId>cn.stylefeng</groupId>
            <artifactId>guns-sys</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- 数据源容器 -->
        <dependency>
            <groupId>cn.stylefeng</groupId>
            <artifactId>guns-dbctn</artifactId>
            <version>1.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- 使用高级的 druid 链接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.2.8</version>
        </dependency>

        <!-- web3j依赖相关 -->
        <!--Java 操作智能合约 开始-->
        <!--web3j-spring-boot-starter使用的web3j版本为3.x。本项目使用web3j的4.x版本-->
        <!--        <dependency>-->
        <!--            <groupId>org.web3j</groupId>-->
        <!--            <artifactId>web3j-spring-boot-starter</artifactId>-->
        <!--            <version>1.6.0</version>-->
        <!--        </dependency>-->

        <!-- https://mvnrepository.com/artifact/org.jetbrains.kotlin/kotlin-stdlib -->
        <!--springboot 2.3.4 不需要，2.1.7 需要 -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>1.3.70</version>
        </dependency>
        <!--okhttp与logging-interceptor可根据项目实际情况选择是否添加-->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.web3j</groupId>
            <artifactId>core</artifactId>
            <version>4.7.0</version>
        </dependency>
        <!--Java 操作智能合约 结束-->
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <fork>true</fork><!-- 如果没有该项配置，肯呢个devtools不会起作用，即应用不会restart -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.web3j</groupId>
                <artifactId>web3j-maven-plugin</artifactId>
                <version>4.6.5</version>
                <configuration>
                    <packageName>com.contract</packageName>
                    <sourceDestination>src/main/java/generated</sourceDestination>
                    <nativeJavaType>true</nativeJavaType>
                    <outputFormat>java,bin</outputFormat>
                    <soliditySourceFiles>
                        <directory>src/main/resources</directory>
                        <includes>
                            <include>**/*.sol</include>
                        </includes>
                    </soliditySourceFiles>
                    <outputDirectory>
                        <java>src/java/generated</java>
                        <bin>src/bin/generated</bin>
                        <abi>src/abi/generated</abi>
                    </outputDirectory>
                    <contract>
                        <!--<includes>-->
                        <!--    <include>Chip</include>-->
                        <!--</includes>-->
                        <!--<excludes>-->
                        <!--    <exclude>Hello</exclude>-->
                        <!--    <exclude>Chip</exclude>-->
                        <!--</excludes>-->
                    </contract>
                    <pathPrefixes>
                        <pathPrefix>dep=../dependencies</pathPrefix>
                    </pathPrefixes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.26.1</version>
                <configuration>
                    <dockerHost>unix:///var/run/docker.sock</dockerHost>
                    <images>
                        <image>
                            <name>snexus.stylefeng.cn:6001/guns-api:${docker.img.version}</name>
                            <build>
                                <from>java:8</from>
                                <assembly>
                                    <descriptor>docker-assembly.xml</descriptor>
                                </assembly>
                                <cmd>
                                    <shell>java -jar -Xms512m -Xmx512m -Xss1024K -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=256m /maven/${project.artifactId}.jar</shell>
                                </cmd>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
